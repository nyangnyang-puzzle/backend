name: Deploy to Develop

on:
  push:
    branches:
      - develop

jobs:
  build-and-deploy-dev:
    name: Build, Dockerized and Deploy to Dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Gradle Build
        run: ./gradlew build

      - name: Set up Docker With Buildx
        uses: docker/setup-buildx-action@v3
      - name: Determine Image Tag
        id: image-tag
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c -7)
          IMAGE_TAG="${{ github.run_id }}-${SHORT_SHA}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> "$GITHUB_OUTPUT"
      - name: Docker Image Build
        env:
          GCP_REGISTRY: asia-northeast3-docker.pkg.dev/nyang-453314
          GCP_REPOSITORY: nyangpuzzle/dev/backend-api
          IMAGE_TAG: ${{ steps.image-tag.outputs.IMAGE_TAG }}
        run: |
          docker buildx build --platform=linux/amd64 -t $GCP_REGISTRY/$GCP_REPOSITORY:$IMAGE_TAG
      - name: Tag Docker image and push to Google Artifact Registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            asia-northeast3-docker.pkg.dev/nyang-453314/nyangpuzzle/dev/backend-api:${{ steps.get-tag.outputs.short_ref }}
            asia-northeast3-docker.pkg.dev/nyang-453314/nyangpuzzle/dev/backend-api:latest

      - name: Deploy to Development Environment
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_SSH_USERNAME }}
          key: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
          port: ${{ secrets.DEV_SSH_PORT }}
          script: |
            cd puzzle
            sh dev_run.sh