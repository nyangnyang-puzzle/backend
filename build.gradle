plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id "org.sonarqube" version "5.0.0.4638"
}

group = 'nyang'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // jwt
    implementation 'com.auth0:java-jwt:4.4.0'

    // redis
    implementation 'org.springframework.data:spring-data-redis'
    implementation 'io.lettuce:lettuce-core'

    // mongodb
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // AWS S3
    implementation platform('software.amazon.awssdk:bom:2.24.7')
    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:auth'
    implementation 'software.amazon.awssdk:regions'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'org.testcontainers:junit-jupiter:1.20.6'
    testImplementation 'com.redis.testcontainers:testcontainers-redis-junit-jupiter:1.4.6'
}

dependencyManagement {
    imports {
        mavenBom "software.amazon.awssdk:bom:2.24.7" // 예시: 최신 버전으로 변경하세요
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
